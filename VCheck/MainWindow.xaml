<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="VCheck.MainWindow"
        Title="VCheck" Height="530" Width="525">
	<Window.Resources>
		<Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
		<SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
		<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
		<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
		<SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
		<SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
		<SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
		<SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
		<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
		<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
							<Rectangle HorizontalAlignment="Left" Height="100" Margin="0,0,0,0" VerticalAlignment="Top" Width="100">
								<Rectangle.Stroke>
									<SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}"/>
								</Rectangle.Stroke>
							</Rectangle>

							<Ellipse Fill="#80FFFFFF" HorizontalAlignment="Left" Height="80" Margin="10,10,0,0" VerticalAlignment="Top" Width="80"/>

							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:IsLocked="True" Margin="45.541,42.38"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="true"/>
							<Trigger Property="IsMouseOver" Value="true"/>
							<Trigger Property="IsPressed" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
							<Path Data="M50,0 L10,90 90,90 z" HorizontalAlignment="Left" Height="79.3" Margin="10,10,0,0" Stretch="Fill" VerticalAlignment="Top" Width="80.6" Fill="#7FFFFFFF"/>
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="45.933,42.38"/>
							<Rectangle HorizontalAlignment="Left" Height="100" VerticalAlignment="Top" Width="100">
								<Rectangle.Stroke>
									<SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}"/>
								</Rectangle.Stroke>
							</Rectangle>
						
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="true"/>
							<Trigger Property="IsMouseOver" Value="true"/>
							<Trigger Property="IsPressed" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
							<Rectangle HorizontalAlignment="Left" Height="80" Margin="10,10,0,0" VerticalAlignment="Top" Width="80" Fill="#80FFFFFF"/>

							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="45.963,42.38"/>
							<Rectangle HorizontalAlignment="Left" Height="100" Margin="0" VerticalAlignment="Top" Width="100">
								<Rectangle.Stroke>
									<SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}"/>
								</Rectangle.Stroke>
							</Rectangle>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="true"/>
							<Trigger Property="IsMouseOver" Value="true"/>
							<Trigger Property="IsPressed" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle4" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
							<Path Data="M49.232816,86.933001 C35.390295,73.985501 23.53323,60.344496 13.499677,46.066554 0.56580499,23.267082 25.899352,-4.0320863 49.233164,24.600002 69.100102,0.50081534 96.833758,15.434008 86.299978,43.233745 75.832061,59.134122 63.426913,73.665614 49.232816,86.933001 z" HorizontalAlignment="Left" Height="75.638" Margin="9.996,12.295,0,0" Stretch="Fill" VerticalAlignment="Top" Width="79.617" Fill="#80FFFFFF"/>							
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="45.965,42.38"/>
							<Rectangle HorizontalAlignment="Left" Height="100" VerticalAlignment="Top" Width="100">
								<Rectangle.Stroke>
									<SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}"/>
								</Rectangle.Stroke>
							</Rectangle>							
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="true"/>
							<Trigger Property="IsMouseOver" Value="true"/>
							<Trigger Property="IsPressed" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>
    
	<Grid>
		<GroupBox Header="GroupBox" Margin="0,10,0,0" Width="250" Height="480" HorizontalAlignment="Left" VerticalAlignment="Top"/>
		<StackPanel HorizontalAlignment="Left" Height="470" Margin="10,20,0,0" VerticalAlignment="Top" Width="498" Orientation="Horizontal">           
			<WrapPanel HorizontalAlignment="Left" Height="459" VerticalAlignment="Top" Width="240">
				<Button Content="H" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Height="100" Margin="10,15,0,10" Click="Button_Click" Style="{DynamicResource ButtonStyle1}"/>
				<Button Content="A" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Height="100" Margin="10,15,0,10" Click="Button_Click" Style="{DynamicResource ButtonStyle2}"/>
				<Button Content="B" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Height="100" Margin="10,0,0,10" Click="Button_Click" Style="{DynamicResource ButtonStyle3}"/>
				<Button Content="C" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Height="100" Margin="10,0,0,10" Click="Button_Click" Style="{DynamicResource ButtonStyle4}"/>
				<Button Content="D" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Height="100" Margin="10,0,0,10" Click="Button_Click"/>
				<Button Content="S" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Height="100" Margin="10,0,0,10" Click="Button_Click"/>
				<ComboBox x:Name="comboBox" Width="210" Margin="10,10,0,10" SelectionChanged="comboBox_SelectionChanged">
					<ComboBoxItem x:Name="cb1" Content="すばらしいのうりょく"/>
					<ComboBoxItem x:Name="cb2" Content="そうとうゆうしゅうな のうりょく"/>
					<ComboBoxItem x:Name="cb3" Content="へいきんいじょうののうりょく"/>
					<ComboBoxItem x:Name="cb4" Content="まずまずののうりょく"/>
				</ComboBox>
				<Button Width="210" Height="50" Margin="10,20,0,0" Content="追加" Click="Button_Click_1"/>

			</WrapPanel>
			<ListView Width="150" Margin="10,0,0,0"/>


		</StackPanel>

	</Grid>
</Window>
